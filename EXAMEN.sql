--TRIGGER 1: VALIDAR QUE NO SE PUEDAN ELIMINAR EMPLOYEES Y CUSTOMERS LOS LUNES. 
CREATE TRIGGER TR_EXAMEN1 
ON EMPLOYEES FOR DELETE AS 
	IF DATEPART(DW,GETDATE())=2
	BEGIN
		ROLLBACK TRAN
		RAISERROR('NO SE PUEDEN ELIMINAR EMPLEADOS LOS DIAS LUNES',16,1)
	END
GO
CREATE TRIGGER TR_EXAMEN1_2
ON CUSTOMERS FOR DELETE AS 
	IF DATEPART(DW,GETDATE())=2
	BEGIN
		ROLLBACK TRAN
		RAISERROR('NO SE PUEDEN ELIMINAR CLIENTES LOS DIAS LUNES',16,1)
	END
GO


 
--TRIGGER 2: VALIDAR EN LA TABLA EMPLOYEES QUE UN JEFE NO TENGA A SU CARGO MAS DE 5 EMPLEADOS
CREATE TRIGGER TR_EXAMEN2
ON Employees
FOR INSERT, UPDATE
AS
BEGIN
    DECLARE @EmployeeCount INT

    SELECT @EmployeeCount = COUNT(*) 
    FROM Employees
    WHERE ReportsTo = (SELECT ReportsTo FROM INSERTED)

    IF @EmployeeCount > 5
    BEGIN
        ROLLBACK TRAN
        RAISERROR('UN JEFE NO PUEDE TENER MAS DE 5 EMPLEADOS A SU CARGO.', 16, 1)
    END
END





--TRIGGER 3: VALIDAR QUE SOLO SE PUEDAN ACTUALIZAR UN SOLO CAMPO A LA VEZ EN LA SIGUIENTE TABLA 
--CLIENTES(CLAVE, NOMBRE, DOMICILIO, TELEFONO, CORREO)
CREATE DATABASE EXAMENTRIGGERS
USE EXAMENTRIGGERS
CREATE TABLE CLIENTES(
	CLAVE INT NOT NULL PRIMARY KEY,
	DOMICILIO VARCHAR(50),
	TELEFONO VARCHAR(50),
	CORREO VARCHAR(254))
GO

INSERT INTO CLIENTES (CLAVE, DOMICILIO, TELEFONO, CORREO) VALUES
    (1, 'Calle A #123', '555-1234', 'cliente1@example.com'),
    (2, 'Avenida B #456', '555-5678', 'cliente2@example.com'),
    (3, 'Calle C #789', '555-9876', 'cliente3@example.com'),
    (4, 'Avenida D #1011', '555-1122', 'cliente4@example.com'),
    (5, 'Calle E #1314', '555-1415', 'cliente5@example.com');
GO
--TOMANDO EN CUENTA QUE LA TABLA YA ESTE CREADA SE LE PUEDE AGREGAR UN CONTADOR O PONERLO DIRECTAMENTE EN EL TRIGGER 
CREATE TRIGGER TR_EXAMEN3
ON CLIENTES FOR UPDATE AS
BEGIN
	DECLARE @CONTADOR INT = 0
	IF UPDATE(CLAVE)
	SELECT @CONTADOR = @CONTADOR+1
	IF UPDATE(DOMICILIO)
	SELECT @CONTADOR = @CONTADOR+1
	IF UPDATE(TELEFONO)
	SELECT @CONTADOR = @CONTADOR+1
	IF UPDATE(CORREO)
	SELECT @CONTADOR = @CONTADOR+1

	IF @CONTADOR>1
	BEGIN
		ROLLBACK TRAN
		RAISERROR('SOLAMENTE SE PUEDE ACTUALIZAR UN CAMPO A LA VEZ',16,1)
	END
END
GO




--TRIGGER 4:UTILIZANDO TRIGGER, SIMULA LA LLAVE PRIMARIA DE LA TABLA CIUDADES(CLAVE, NOMBRE), PERO CON LA VARIANTE QUE ACEPTE SOLO DOS VECES LA MISMA CLAVE
-- Actualizar el campo DOMICILIO del cliente con CLAVE 1
-- Crear una tabla temporal para almacenar la cantidad de veces que se inserta o actualiza cada clave
CREATE TABLE CIUDADES(
	Clave INT PRIMARY KEY,
	NOMBRE VARCHAR(50),
)
GO

-- Crear un trigger para simular la llave primaria con la variante
CREATE TRIGGER TR_EXAMEN4
ON CIUDADES FOR INSERT, UPDATE AS
DECLARE @CLAVE INT, @REGISTROS INT
SELECT @CLAVE=CLAVE FROM inserted
SELECT @REGISTROS=COUNT(*) FROM CIUDADES
WHERE @CLAVE=Clave

IF @REGISTROS >2
BEGIN
	ROLLBACK TRAN
	RAISERROR('SOLO SE PUEDEN REALIZAR DOS REGISTROS CON LA MISMA CLAVE',16,1)
END 
GO
